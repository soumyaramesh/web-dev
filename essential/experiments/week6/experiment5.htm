<!DOCTYPE html>
<html>
<head>
    <title>NodeJS Update or Modify JSON</title>
    <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
    <script src="javascript/angular.js"></script>
    <script src="javascript/angular-sanitize.js"></script>
    <script src="javascript/angular-route.js"></script>
    <script src="javascript/angular-route.min.js"></script>
    <script src="javascript/app.js"></script>
    <script src="javascript/services.js"></script>
    <script src="javascript/controller.js"></script>
</head>

<body ng-app="F1FeederApp" ng-controller="driversController" style="background-color: peachpuff">


    <h1 style="color:palevioletred"> Update or Modify JSON</h1>
    <div class="container-fluid" style="border:2px solid; width:700px; height:500px; border-radius:30px">
        <a href="http://nodejs-soumyaramesh.rhcloud.com/exp5.html"> <h4>Click Here to see the Output</h4></a>  </br></br>
        <img src="../images/week6_5.jpg" alt="exp5 Output">
    </div>
    <fieldset>
        <h3>About the Experiment</h3>
        <p>This experiment is an extension of the previous experiment where I have another new button to update the author or title of a book when it is selected.
        <p> To do this, I have used app.put in server.js.  The value of the book can now be modified and updated so that the change is reflected in the original books JSON object.</p>

    </fieldset>
    <br />

    <h3>Code Snippet:</h3>

    <pre style="background-color:palegoldenrod">
        
    <code>
<strong>exp5.html</strong>
&lt;button ng-click="updateBook(book)" class="btn btn-primary"&gt;
    &lt;span class="glyphicon glyphicon-check"&gt;&lt;/span&gt;
&lt;/button&gt;
<strong>server.js</strong>
app.put("/book/:id", function (req, res) {
    var index = req.params.id;
    var obj = req.body;
    books[index] = obj;
    res.json(books);
});
})
<strong>clientApp.js</strong>
$scope.updateBook = function (book) {
        $http.put("/book/" + $scope.selectedIndex, book)
        .success(function (response) {
            $scope.books = response
        })
    }
        </code>
        </pre>
    </p>


    <h4>Description</h4>
    <div style="background-color:beige" class="container-fluid">
        <p>
            A new button is created for a book to be updated or modified. When the book is selected, its value is copied into the form through copy by reference.
        </p>
        <p> In server.js, app.put is used to update the value of the selected book and the server is waiting for the index of the book "/book/:id" and the index is obtained through req.params.id. To parse the updated value, req.body is used and books[index] now holds this updated value. </p>
        <p> When the button is clicked, the updateBook handler is called which generates a $http.put in the form of "/book/" + $scope.selectedIndex and the updated book value. On success, it will assign the response to books which now contains the updated value.</p>

    </div>
    <fieldset>
        <h3>Source Code</h3>
        <a href="../../fileview/Default.aspx?~/experiments/week6/experiment5.htm" target="_blank">experiment5.htm</a><br />
        <a href="../../fileview/Default.aspx?~/experiments/week6/server.js" target="_blank">server.js</a><br />
        <a href="../../fileview/Default.aspx?~/experiments/week6/clientApp.js" target="_blank">clientApp.js</a>
    </fieldset>
    <fieldset>
        <h3>References</h3>
        <nav>
            <a href="https://www.youtube.com/user/jannunzi" target="_blank">Prof Jose's Lectures</a>
            <br />
        </nav>
    </fieldset>
    <br />

</body>
</html>